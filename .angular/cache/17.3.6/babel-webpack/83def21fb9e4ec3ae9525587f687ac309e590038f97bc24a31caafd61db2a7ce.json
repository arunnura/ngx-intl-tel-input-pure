{"ast":null,"code":"import * as lpn from 'google-libphonenumber';\n/*\nWe use \"control: any\" instead of \"control: FormControl\" to silence:\n\"Property 'nativeElement' does not exist on type 'FormControl'\".\nThis happens because I've expanded control with nativeElement via\n'NativeElementInjectorDirective' to get an access to the element.\nMore about this approach and reasons for this:\nhttps://github.com/angular/angular/issues/18025\nhttps://stackoverflow.com/a/54075119/1617590\n*/\nexport const phoneNumberValidator = control => {\n  if (!control.value) {\n    return;\n  }\n  // Find <input> inside injected nativeElement and get its \"id\".\n  const el = control.nativeElement;\n  const inputBox = el ? el.querySelector('input[type=\"tel\"]') : undefined;\n  if (inputBox) {\n    const id = inputBox.id;\n    const isCheckValidation = inputBox.getAttribute('validation');\n    if (isCheckValidation === 'true') {\n      const isRequired = control.errors && control.errors.required === true;\n      const error = {\n        validatePhoneNumber: {\n          valid: false\n        }\n      };\n      inputBox.setCustomValidity('Invalid field.');\n      // tslint:disable-next-line:variable-name\n      let number;\n      try {\n        number = lpn.PhoneNumberUtil.getInstance().parse(control.value.number, control.value.countryCode);\n      } catch (e) {\n        if (isRequired === true) {\n          return error;\n        } else {\n          inputBox.setCustomValidity('');\n        }\n      }\n      if (control.value) {\n        if (!number) {\n          return error;\n        } else {\n          if (!lpn.PhoneNumberUtil.getInstance().isValidNumberForRegion(number, control.value.countryCode)) {\n            return error;\n          } else {\n            inputBox.setCustomValidity('');\n          }\n        }\n      }\n    } else if (isCheckValidation === 'false') {\n      inputBox.setCustomValidity('');\n      control.clearValidators();\n    }\n  }\n  return;\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}