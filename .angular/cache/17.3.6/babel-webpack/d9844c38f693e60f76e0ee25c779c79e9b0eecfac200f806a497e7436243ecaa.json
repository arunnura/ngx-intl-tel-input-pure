{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\n/*\n\"Property 'nativeElement' does not exist on type 'FormControl'\".\n'NativeElementInjectorDirective' injects nativeElement to each control,\nso we can access it from inside validator for example.\nMore about this approach and reasons for this:\nhttps://github.com/angular/angular/issues/18025\nhttps://stackoverflow.com/a/54075119/1617590\n*/\nexport let NativeElementInjectorDirective = /*#__PURE__*/(() => {\n  class NativeElementInjectorDirective {\n    constructor(controlDir, host) {\n      this.controlDir = controlDir;\n      this.host = host;\n    }\n    ngOnInit() {\n      if (this.controlDir.control) {\n        this.controlDir.control['nativeElement'] = this.host.nativeElement;\n      }\n    }\n    static #_ = this.ɵfac = function NativeElementInjectorDirective_Factory(t) {\n      return new (t || NativeElementInjectorDirective)(i0.ɵɵdirectiveInject(i1.NgControl), i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n    static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n      type: NativeElementInjectorDirective,\n      selectors: [[\"\", \"ngModel\", \"\"], [\"\", \"formControl\", \"\"], [\"\", \"formControlName\", \"\"]]\n    });\n  }\n  return NativeElementInjectorDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}