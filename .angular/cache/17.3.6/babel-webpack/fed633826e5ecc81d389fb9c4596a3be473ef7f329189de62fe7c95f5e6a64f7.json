{"ast":null,"code":"import { OverlayConfig } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/overlay\";\nimport * as i2 from \"@angular/cdk/portal\";\nconst _c0 = [\"*\"];\nfunction DropdownComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nexport let DropdownComponent = /*#__PURE__*/(() => {\n  class DropdownComponent {\n    constructor(overlay) {\n      this.overlay = overlay;\n      this.eventClosed = new EventEmitter();\n      this.showing = false;\n    }\n    show() {\n      this.overlayRef = this.overlay.create(this.getOverlayConfig());\n      this.overlayRef.attach(this.contentTemplate);\n      this.syncWidth();\n      this.overlayRef.backdropClick().subscribe(() => this.hide());\n      this.showing = true;\n    }\n    hide() {\n      this.overlayRef.detach();\n      this.overlayRef.dispose();\n      this.showing = false;\n      this.eventClosed.emit(true);\n    }\n    onWinResize() {\n      this.syncWidth();\n    }\n    getOverlayConfig() {\n      const currentPositionStrategy = this.overlay.position().flexibleConnectedTo(this.reference).withPush(false).withPositions([{\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n      }, {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n      }]);\n      return new OverlayConfig({\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n        hasBackdrop: true,\n        positionStrategy: currentPositionStrategy\n      });\n    }\n    syncWidth() {\n      if (!this.overlayRef) {\n        return;\n      }\n      const refRect = this.reference.getBoundingClientRect();\n      this.overlayRef.updateSize({\n        width: refRect.width\n      });\n    }\n    static #_ = this.ɵfac = function DropdownComponent_Factory(t) {\n      return new (t || DropdownComponent)(i0.ɵɵdirectiveInject(i1.Overlay));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DropdownComponent,\n      selectors: [[\"lib-custom-dropdown\"]],\n      viewQuery: function DropdownComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(CdkPortal, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentTemplate = _t.first);\n        }\n      },\n      hostBindings: function DropdownComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"resize\", function DropdownComponent_resize_HostBindingHandler() {\n            return ctx.onWinResize();\n          }, false, i0.ɵɵresolveWindow);\n        }\n      },\n      inputs: {\n        reference: \"reference\"\n      },\n      outputs: {\n        eventClosed: \"eventClosed\"\n      },\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      consts: [[\"cdk-portal\", \"\"]],\n      template: function DropdownComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, DropdownComponent_ng_template_0_Template, 1, 0, \"ng-template\", 0);\n        }\n      },\n      dependencies: [i2.TemplatePortalDirective],\n      encapsulation: 2\n    });\n  }\n  return DropdownComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}